What happens when your type google.com in your browser and press enter?
Here's what happens when you type https://www.google.com in your browser and press Enter:
When you type a website address like https://www.google.com into your browser and hit Enter, a series of events take place behind the scenes to bring up the website on your screen. Let's take a look at each of these steps in detail:

DNS request:

The first step is to resolve the domain name to its corresponding IP address. Your browser sends a Domain Name System (DNS) request to your internet service provider's (ISP) DNS servers, which in turn send a request to the root DNS server. The root DNS server then directs the request to the top-level domain (TLD) server, which manages all domain names that end with the same TLD (in this case, ".com"). The TLD server then forwards the request to the domain's authoritative DNS server, which response with the IP address of the web server hosting the website.

TCP/IP:

Next, your browser opens a Transmission Control Protocol (TCP) connection with the web server at the IP address received from the DNS lookup. TCP ensures reliable transmission of data by breaking it down into small packets and reassembling them at the destination. The Internet Protocol (IP) is used to route these packets across the internet.

Firewall:

If you are accessing the website from a corporate network or behind a firewall, the firewall will check the packets to ensure they are not a security threat before allowing them to pass through.

HTTPS/SSL:

If the website you are accessing is secured with HTTPS (Hypertext Transfer Protocol Secure), the web server will send an SSL (Secure Sockets Layer) certificate to your browser to verify its identity. This certificate includes a public key that your browser uses to encrypt data before sending it to the server. This ensures that any data sent between your browser and the server is secure and cannot be intercepted by a third party.

Load-balancer:

If the website is hosted on multiple servers, a load-balancer may be used to distribute incoming requests evenly among them to improve performance and ensure availability.

Web server:

Once the TCP connection is established and any security measures have been taken care of, the web server receives the request from your browser and sends back the webpage content.

Application server:

If the website is dynamic and requires data to be generated on-the-fly, an application server may be used to process the request and send back the appropriate content. This could involve accessing a database or other backend services.

Database:

If the website relies on data stored in a database, the application server will retrieve this data and use it to generate the content that is sent back to your browser.

Understanding how the internet works can be an intimidating task, but it's important to have some knowledge about the basics of the infrastructure that connects us to the digital world. One fundamental aspect of the Internet is the server-client architecture, which is used to provide services to internet-connected devices.

A server is a computer program or device that provides a service to another computer program and its user, known as the client. The client is typically the device requesting information, such as a web user's computer, laptop, or phone connected to Wi-Fi or mobile networks, and web-accessing software like Google Chrome, Firefox, or Safari.

Servers store webpages, sites, or apps and send or serve information to the client. When a client device wants to access a webpage, it requests a copy of the webpage from the server, which is then downloaded onto the client to be displayed in the user's web browser.

To access a website, users type the website name or address, technically called a URL, into their browser, and press enter. The first thing the browser does is to break down the URL into pieces, which requires the help of Domain Name System (DNS) servers. DNS servers are application servers that convert domain names, easily understood by humans, into machine-readable IP addresses.

Each device connected to the internet has a unique IP address that other machines use to find it. This process, called DNS resolution or DNS lookup, has four steps and servers involved in loading a webpage.

The DNS recursor is the first stop, a server designed to receive queries from clients through applications such as web browsers. If this server already has the IP address stored in a cache, it will return it back. Otherwise, it will be responsible for making additional requests by sending a query to the root DNS server.

The root server, or root nameserver, doesn't have information about the hostname, but it has information on where to find it. Therefore, it will refer the requests to the appropriate Top-Level Domain (TLD) server. The TLD is the next step in the search for a specific IP address and hosts the last portion of a hostname. For example, in google.com, the TLD server is "com." The request is then sent to the authoritative nameserver.

The authoritative nameserver is the last stop in the nameserver query. If this server has access to the requested record, it will return the IP address for the requested hostname back to the DNS recursor that made the initial request. Otherwise, it will send an error saying the record couldn't be found.

Once the browser knows where to find the website, it's time to make a connection to access the requested webpage. Browsers use internet protocols to build such connections, the most common being the Internet Protocol Suite or TCP/IP. This set of rules governs the format of data sent via the internet or local network, such as sending e-mails, streaming videos, or connecting to a website.

When the TCP connection is established, it's time to transfer data. However, to avoid overloading any particular server with too many requests, a load balancer, like HAProxy, is used. The load balancer receives traffic from the internet and distributes it among multiple servers.

Security is key in today's digital world, so an extra security measure is taken using Secure Socket Layer (SSL). SSL is a protocol for servers and web browsers that ensures data passed between the two is private. This is done using an SSL certificate, a small data file that cryptographically establishes an encrypted link between a web server and a browser. This link ensures that all data passed between the web server and browser remains private.

HTTP (Hypertext Transfer Protocol) is the protocol used for transferring data over the web. It is an application-layer protocol that is built on top of TCP/IP, and it defines the format of messages that are sent between web browsers and web servers.

HTTP defines a set of request methods, or verbs, that are used to communicate the action that should be performed on the specified resource. The most common HTTP methods are:

GET: Requests a representation of the specified resource. This is the method used for retrieving web pages and other resources from a web server.
POST: Submits an entity to the specified resource, often causing a change in state or side effects on the server.
PUT: Replace the specified resource with the entity provided in the request.
DELETE: Deletes the specified resource.
HEAD: Asks for a response identical to a GET request but without the response body.
OPTIONS: Describe the communication options for the target resource.
TRACE: Performs a message loop-back test along the path to the target resource.
An HTTP request will always return a response, at least with the status code indicating if the request has been successful or not. Some of the most popular status codes are:

Informational responses (100–199)
Successful responses (200–299)
Redirection messages (300–399)
Client error responses (400–499)
Server error responses (500–599)
In conclusion, the Internet is a complex system that consists of various elements, and servers are one of the key components that enable the Internet to function. When you type a website address into your browser, a complex series of events take place behind the scenes to bring up the website on your screen. Understanding these steps can help you troubleshoot issues and optimize website performance.

#alxafrica #fullstack #articlewriting #google #alxsystemengineeringdevops #blogpost 
